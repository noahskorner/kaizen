// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserRecord {
  id              String                 @id @default(uuid())
  createdAt       DateTime               @default(now())
  updatedAt       DateTime               @default(now()) @updatedAt
  email           String                 @unique
  password        String
  institutions    InstitutionRecord[]
  virtualAccounts VirtualAccountRecord[]

  @@index([email])
  @@map("user")
}

model InstitutionRecord {
  id               String          @id @default(uuid())
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @default(now()) @updatedAt
  plaidAccessToken String
  plaidCursor      String?         @map("plaidTransactionCursor")
  userId           String
  user             UserRecord      @relation(fields: [userId], references: [id])
  accounts         AccountRecord[]

  @@map("institution")
}

enum AccountRecordType {
  Investment
  Credit
  Depository
  Loan
  Brokerage
  Other
}

model AccountRecord {
  id            String              @id @default(uuid())
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @default(now()) @updatedAt
  externalId    String              @unique
  type          AccountRecordType   @default(Other)
  institutionId String
  institution   InstitutionRecord   @relation(fields: [institutionId], references: [id])
  current       Float
  available     Float
  currency      String?
  transactions  TransactionRecord[]

  @@map("account")
}

model TransactionRecord {
  id                String        @id @default(uuid())
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @default(now()) @updatedAt
  externalId        String        @unique
  accountId         String
  account           AccountRecord @relation(fields: [accountId], references: [id])
  externalAccountId String
  amount            Float
  currency          String?
  date              DateTime?
  name              String
  merchantName      String?
  pending           Boolean
  logoUrl           String?

  @@map("transaction")
}

enum VirtualAccountRecordFrequency {
  Weekly
  Biweekly
  Monthly
}

model VirtualAccountRecord {
  id        String                        @id @default(uuid())
  createdAt DateTime                      @default(now())
  updatedAt DateTime                      @default(now()) @updatedAt
  userId    String
  user      UserRecord                    @relation(fields: [userId], references: [id])
  name      String
  balance   Float
  amount    Float
  currency  String
  frequency VirtualAccountRecordFrequency @default(Monthly)

  @@map("virtualAccount")
}
