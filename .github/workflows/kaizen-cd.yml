name: Kaizen CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.9.0

      - name: Install Dependencies
        run: npm ci

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Push Docker Image
        run: |
          cd apps/api
          npm run docker:build
          npm run docker:tag --region=${{ env.AWS_REGION }} --repository=${{ env.AWS_ECS_REPOSITORY }}
          npm run docker:push --region=${{ env.AWS_REGION }} --repository=${{ env.AWS_ECS_REPOSITORY }}

      - name: Deploy AWS Stack
        run: |
          cd ../../infrastructure
          npm run stack:build
          npm run stack:deploy
        env:
          NODE_ENV: ${{ env.NODE_ENV }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          ACCESS_TOKEN_EXPIRATION: ${{ env.ACCESS_TOKEN_EXPIRATION }}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
          REFRESH_TOKEN_EXPIRATION: ${{ env.REFRESH_TOKEN_EXPIRATION }}
          REFRESH_TOKEN_COOKIE_DOMAIN: ${{ env.REFRESH_TOKEN_COOKIE_DOMAIN }}
          API_PORT: ${{ env.API_PORT }}
          API_DOMAIN: ${{ env.API_DOMAIN }}
          FRONTEND_DOMAIN: ${{ env.FRONTEND_DOMAIN }}
          PLAID_CLIENT_ID: ${{ secrets.PLAID_CLIENT_ID }}
          PLAID_SECRET: ${{ secrets.PLAID_SECRET }}
